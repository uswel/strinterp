name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'

      - name: Calculate next tag
        id: calculate_tag
        run: |
          # Get the latest tag, or default to v0.0.0
          latest_tag=$(git describe --tags --abbrev=0 --match "v*" 2>/dev/null || echo "v0.0.0")
          
          # Increment the patch version
          major=$(echo $latest_tag | cut -d. -f1 | cut -c2-)
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          new_patch=$((patch + 1))
          
          # Construct the new tag
          new_tag="v${major}.${minor}.${new_patch}"
          
          echo "new_tag=${new_tag}" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          git tag ${{ steps.calculate_tag.outputs.new_tag }}
          git push origin ${{ steps.calculate_tag.outputs.new_tag }}

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --rm-dist --snapshot

      - name: Generate Changelog with git-chglog
        uses: ffurrer2/extract-release-notes@v1
        id: changelog

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.release_notes }}
          draft: false
          prerelease: false